{
  "name": "Telegram AI Chatbot Agent with InfraNodus GraphRAG Knowledge Base",
  "nodes": [
    {
      "parameters": {
        "content": "## AI Chatbot Agent with Experts\n\n### Uses the InfraNodus knowledge graphs and its Graph RAG to retrieve relevant information.\n\nUse your [InfraNodus graph](https://infranodus.com) as the knowledge base for your AI chatbot. \n\nUpload any data to InfraNodus, generate separate knowledge graphs, then connect them as tools to the agent, so it can decide which \"expert\" to use. InfraNodus' Graph RAG will provide high-quality responses that will augment the chatbot's answers.\n\nVideo demo: [https://www.youtube.com/watch?v=kS0QTUvcH6E](https://www.youtube.com/watch?v=kS0QTUvcH6E)\n\nDetailed description: [Nodus Labs support portal](https://support.noduslabs.com/hc/en-us/articles/20174217658396-Using-InfraNodus-Knowledge-Graphs-as-Experts-for-AI-Chatbot-Agents-in-n8n)\n\nInfraNodus API key can be obtained at [InfraNodus.Com](https://infranodus.com/use-case/ai-knowledge-graphs)\n\n\n[![Video tutorial](https://img.youtube.com/vi/kS0QTUvcH6E/sddefault.jpg)](https://www.youtube.com/watch?v=kS0QTUvcH6E)",
        "height": 760,
        "width": 540,
        "color": 6
      },
      "id": "714b4de1-1226-45c4-9825-2def39173f6a",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1700,
        180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Chat Memory\n\nWe use the Simple Memory node to track the conversation's context so that the user can refer to previous messages as they converse with the model.",
        "height": 540,
        "width": 200
      },
      "id": "4d82486f-c09c-4145-8d6e-d22499bc19db",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -820,
        1240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 3. AI Agent Workflow\n\n### Chooses which tool (expert) to use, depending on the user's message. Then receives the responses and synthesizes the final answer.\n\nMake sure you describe the tools available well both in the Agent's System Prompt and in the tools' descriptions. ",
        "height": 400,
        "width": 460
      },
      "id": "0c082292-1681-4eed-b589-cdfc3a670bdb",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1020,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 1. Telegram Trigger\n\nThe conversation will be triggered when you send a message to your Telegram bot. To set up a bot, simply message `/newbot` to `@botfather` in Telegram. It takes 30 seconds. ",
        "height": 500
      },
      "id": "6b3cadf7-5cf2-4de2-9f2c-718896966509",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1700,
        1000
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "d08f24e7-cf3c-437e-a43b-5109fda8054c",
      "name": "OpenAI Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -1040,
        1300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Receive a Message on Telegram').item.json.message.chat.id }}"
      },
      "id": "084dedfe-4f71-4001-bd40-a32c69c3f720",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        -760,
        1280
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 2. Give Feedback to User\n\nThis node gives feedback to the user that the Agent is working.",
        "height": 500,
        "width": 260
      },
      "id": "7d543dd0-a403-4c71-b771-0d2994818720",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1420,
        1000
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "1b3aec9f-b8c1-4e36-a4c5-c5460e7ce433",
      "name": "Receive a Message on Telegram",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        -1640,
        1020
      ],
      "webhookId": "aa8d195c-01c2-435b-9d88-87b38306a6a6",
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "operation": "sendChatAction",
        "chatId": "={{ $json.message.chat.id }}"
      },
      "id": "62b5d3d6-f72d-4706-8525-5f7d6b48ac22",
      "name": "Send \"Typing...\" message to User",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -1340,
        1020
      ],
      "webhookId": "845f29dd-9da3-4ac9-86d1-22280acbb46a",
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "## 4. Respond to the User\n\nOnce the response is generated, send it back to the user's chat in Telegram.",
        "height": 380,
        "width": 260
      },
      "id": "315e282b-a653-4a58-8ba0-b4fa0ed5167b",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -360,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chatId": "={{ $('Receive a Message on Telegram').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "236cd6a7-4a22-42e7-ab97-b3b8c24ae1e0",
      "name": "Send Telegram Message to User",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -280,
        940
      ],
      "webhookId": "a6b9e331-2b1a-4056-a9fc-5d10b7196c54",
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Receive a Message on Telegram').item.json.message.text }}",
        "options": {
          "systemMessage": "You are well-versed on Dmitry Paranyushkin's books through the tools you have access to. When you receive a user's query, you can modify it to suit better each tool's context. Always access at least one of the tools and deliver an augmented response.\n\nWhen you're generating a response, attempt to combine perspectives where they fit and point out discrepancies when they exist."
        }
      },
      "id": "274f3044-65e9-4ade-906b-daa1ce56c03a",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -900,
        980
      ],
      "typeVersion": 1.9
    },
    {
      "parameters": {
        "toolDescription": "Make a request to The Waves into Patterns book which is well-versed in the questions of natural cycles, variability, fractal states, dynamics, and nonequilibrium stability. Including the following topics:\n\n<MainTopics>: \n1. System Influence: scale influence multiple \n2. Pattern Dynamics: pattern variability fractal \n3. Change Balance: dynamic wave time \n4. Center Transformation: center cycle dominant \n5. Growth Stages: growth exploration period \n6. Long Strategy: term state long \n7. Seasonal Relations: moon summer natural \n8. Flow Connection: exist breaking exploring \n</MainTopics>",
        "method": "POST",
        "url": "https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "special_agents_manual"
            },
            {
              "name": "prompt",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}"
            },
            {
              "name": "requestMode",
              "value": "response"
            },
            {
              "name": "aiTopics",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "id": "4ed6b7a1-0512-430a-b2cf-6318343891c7",
      "name": "Waves into Patterns Book Expert",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        -320,
        1280
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "toolDescription": "Make a request to The Special Agent's Manual book which is well-versed in the questions of human agency, speciality, infiltration and tension dynamics, strategies, identities, finding the special in you as well as the following topics:\n\n<MainTopics>: \n1. Agent Activation: agent special activation \n2. System Dynamics: system body operating \n3. Order Flow: action time order \n4. Creative Process: create identity entity \n5. Movement Patterns: movement wave breathing \n6. Incoming Impact: incoming impulse impact \n7. Fiction Venture: fiction high risk \n8. Social Framework: preset possibility level \n</MainTopics>",
        "method": "POST",
        "url": "https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "special_agents_manual"
            },
            {
              "name": "prompt",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}"
            },
            {
              "name": "requestMode",
              "value": "response"
            },
            {
              "name": "aiTopics",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "id": "2c34293c-6351-4bd2-9f86-7614df27ee76",
      "name": "Special Agent's Manual Book Expert",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        -540,
        1280
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "toolDescription": "The Flow and the Notion book which is well-versed in the questions of creating with someone, dreaming, making new shapes, dissipating ideas, art, and life. Including the following topics:\n\n<MainTopics>: \n1. Shape Dynamics: shape outline concentric \n2. Time Alignment: long practice time \n3. Man's Journey: bow man candle \n4. Notion Flow: image flow paranyushkin \n5. Essence Realization: process essence essential \n6. Life Choices: slave thing trace \n7. Wave Patterns: found light movement \n8. Synchrony Mediation: book circadian word \n9. Complete Vision: multiple synchrony mediate \n10. Instruction Guide: full \ninstruction foreword : instruction foreword \n</MainTopics>",
        "method": "POST",
        "url": "https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "the_flow_and_notion"
            },
            {
              "name": "prompt",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}"
            },
            {
              "name": "requestMode",
              "value": "response"
            },
            {
              "name": "aiTopics",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "id": "b93839b2-023d-4591-80d6-9184b54f9dae",
      "name": "The Flow and the Notion Book",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        -100,
        1280
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "toolDescription": "The Polysingularity Letters book which is well-versed in the questions of polysingularity, multiplicity, networks, networking, art, and creative approach. And also these topics:\n\n<MainTopics>: \n1. Community Dynamics: network community connected \n2. Global Equilibrium: state global change \n3. Polysingular Practice: polysingularity thinking exist \n4. Temporal Relations: time moment thing \n5. Consciousness Source: social cognition view \n6. Meaning Creation: make orthodox meaning \n7. Dmitry Connections: post dmitry minute \n8. Linguistic Variations: wa ë ww \n</MainTopics>",
        "method": "POST",
        "url": "https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "polysingularity_letters"
            },
            {
              "name": "prompt",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}"
            },
            {
              "name": "requestMode",
              "value": "response"
            },
            {
              "name": "aiTopics",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "id": "12d7a02b-262c-4507-a46a-68a574342070",
      "name": "The Polysingularity Letters Book",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        100,
        1280
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "content": "## Setting up a Telegram bot \n\n### It takes only 30 seconds to set up a Telegram bot. Once set up, create a Telegram credential with its access token and use it in all the Telegram nodes above. \n\n1. Create a new chat in Telegram with the [@botfather](https://t.me/botfather) user at [https://t.me/botfather](https://t.me/botfather). \n\n2. Type in `/newbot`\n\n3. Give it a name (that's not the username)\n\n4. Give it a username (e.g. @my_new_bot)\n\n5. You will receive an **API token**. Copy that token and use it to set up the Telegram credentials for the Telegram nodes above. \n\n\nOPTIONAL SETTINGS FOR TELEGRAM GROUPS USE:\n\n6. Note, that if you want to make it possible to add your Telegram bots to groups, you will need to give them permissions to access groups and to read groups' messages. To do that, type in `/mybots`, and list your bots, then choose the bot you created. \n\n7. Then click on Bot Settings > Allow Groups > Yes (the bot will be allowed to join groups)\n\n8. Then choose Settings > Group Privacy > Turn Off (to allow the bot to read groups' messages)\n\n9. Note that your bots won't be able to respond to each other (that's Telegram limitation to avoid spamming and infinite loops), but they will be able to participate in your group's conversations. In that case, you might want to set up an additional filter in the workflow above where the bot will only respond if addressed directly using its username (so that it doesn't respond to every message in the group but only when asked directly).",
        "height": 820,
        "width": 540,
        "color": 3
      },
      "id": "2343a77e-9899-4eab-b284-1b23990ef867",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1700,
        1540
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #1\n\nAdd your InfraNodus graph here via the HTTP node using its name in the `body.name` field.\n\nDescribe what the expert does in the Description of the tool. You can use auto-generated Graph RAG summary from InfraNodus > Graph > Project Notes\n\n![Book Screenshot](https://i.ibb.co/rfxsJ4MV/circadian-special-agents-manual.png)",
        "height": 740,
        "width": 200
      },
      "id": "8910c352-078e-4ff5-bbe2-8068eec5bc87",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -600,
        1240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #2\n\nAdd your InfraNodus graph here via the HTTP node using its name in the `body.name` field.\n\nDescribe what the expert does in the Description of the tool. You can use auto-generated Graph RAG summary from InfraNodus > Graph > Project Notes\n\n![waves into patterns screen](https://i.ibb.co/1tDJSgVq/circadian-waves-into-patterns.png)",
        "height": 740,
        "width": 200
      },
      "id": "f20e88b9-6c8e-45d7-bf68-4023dcbb1cd6",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -380,
        1240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #3\n\nYou can add more experts here. Just make to give them descriptive names, so the agent knows which one to connect to when it has a question. \n\n![flow and notion image](https://i.ibb.co/prLbFG0w/circadian-the-flow-and-notion.png)\n",
        "height": 640,
        "width": 200
      },
      "id": "b21b4b64-9969-4484-854d-cd2c537c2dff",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -160,
        1240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #4\n\nYou can add more experts here. Just make to give them descriptive names, so the agent knows which one to connect to when it has a question. \n\n![infranodus graph](https://i.ibb.co/hRqxn8JN/circadian-conversation-book.png)",
        "height": 640,
        "width": 200
      },
      "id": "6a3e94d5-63f1-42a5-9032-87173ff89951",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        60,
        1240
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send Telegram Message to User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "The Flow and the Notion Book": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Receive a Message on Telegram": {
      "main": [
        [
          {
            "node": "Send \"Typing...\" message to User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Waves into Patterns Book Expert": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Send \"Typing...\" message to User": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "The Polysingularity Letters Book": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Special Agent's Manual Book Expert": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3e11dbb1-a334-4076-aff7-7289ef4d77a9",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9d8747a358c6ef7f467b6ae415e9e8b134cc3cfbb4ead13516b19d9211ae0b58"
  },
  "id": "XUN3zXAPePHOqVAi",
  "tags": []
}